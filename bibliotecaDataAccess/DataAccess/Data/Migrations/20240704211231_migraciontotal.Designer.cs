// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bibliotecaDataAccess;

#nullable disable

namespace bibliotecaDataAccess.DataAccess.Data.Migrations
{
    [DbContext(typeof(AplicationDBContext))]
    [Migration("20240704211231_migraciontotal")]
    partial class migraciontotal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bibliotecaModels.Entity.books", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("autor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("salida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("book");
                });

            modelBuilder.Entity("bibliotecaModels.Entity.loan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("booksid")
                        .HasColumnType("int");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("fecha_entrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fecha_inicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("libro_id")
                        .HasColumnType("int");

                    b.Property<int?>("usersid")
                        .HasColumnType("int");

                    b.Property<int>("usuario_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("booksid");

                    b.HasIndex("usersid");

                    b.ToTable("loans");
                });

            modelBuilder.Entity("bibliotecaModels.Entity.users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permisos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("bibliotecaModels.Entity.loan", b =>
                {
                    b.HasOne("bibliotecaModels.Entity.books", "books")
                        .WithMany()
                        .HasForeignKey("booksid");

                    b.HasOne("bibliotecaModels.Entity.users", "users")
                        .WithMany()
                        .HasForeignKey("usersid");

                    b.Navigation("books");

                    b.Navigation("users");
                });
#pragma warning restore 612, 618
        }
    }
}
